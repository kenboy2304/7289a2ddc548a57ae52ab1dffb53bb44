@using DNS.WebAPI.Models.Enity.Content
@model DNS.WebAPI.Models.Enity.ContentType

@{
    ViewBag.Title = "Sửa Thể Loại Nội Dung";
    if (Model.ContentsOptionInputs == null || !Model.ContentsOptionInputs.Any())
    {
        Model.ContentsOptionInputs = new List<ContentsOptionInputs>
        {
            new ContentsOptionInputs()
        };
    }

}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DislayCatalog, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DislayCatalog)
                    @Html.ValidationMessageFor(model => model.DislayCatalog, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ContentsOptionInputs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Nhãn</th>
                            <th>Loại</th>
                            <th>Mặc định</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.ContentsOptionInputs.Count; i++)
                        {
                            <tr class="type-input-options">
                                <td class="col-md-4">
                                    @Html.TextBox("contentsOptionInputs[" + i + "].Label", Model.ContentsOptionInputs[i].Label, new { @class = "form-control input-label" })
                                </td>
                                <td class="col-md-2">@Html.DropDownList("contentsOptionInputs[" + i + "].TypeInputId", new SelectList(ViewBag.TypeInputs, "Id", "Name", Model.ContentsOptionInputs[i].TypeInputId), new { @class = "form-control input-type" })</td>
                                <td class="col-md-5">@Html.TextBox("contentsOptionInputs[" + i + "].DefaultValue", Model.ContentsOptionInputs[i].DefaultValue, new { @class = "form-control input-default" })</td>
                                <td class="col-md-1"><button class="btn btn-danger btn-sm btn-del"><i class="fa fa-remove"></i></button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-primary btn-sm btn-addtype">Thêm Loại</button>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            $('.btn-addtype').on("click", function () {
                var clone = $(".type-input-options:last").clone().wrap("<div />").parent().html();

                var size = $('.type-input-options').size();
                clone = clone.split("[" + (size - 1) + "]").join("[" + size + "]");
                clone = clone.split("_" + (size - 1) + "_").join("_" + size + "_");
                $(clone).find(".input-label").val("");
                $(clone).find(".input-default").val("");
                $('.type-input-options:last').after(clone);
                return false;
            });
            $('body').delegate(".btn-del", "click", function () {
                var check = confirm("Bạn muốn xóa lựa chọn này?");
                if (check) {
                    if ($('.type-input-options').size() > 1) {
                        $(this).parent().parent().remove();
                    } else {
                        $(this).parent().parent().find('.input-label').val("");
                        $(this).parent().parent().find('.input-default').val("");
                        $(this).parent().parent().find('.input-type').children().removeAttr("selected");

                    }
                    return false;
                }

                return false;
            });
            $("form").on("submit", function () {

                $('.type-input-options').each(function (index) {

                    var name = $(this).find(".input-label").attr("name").replace(/(\d+)/g, index);
                    $(this).find(".input-label").attr("name", name);

                    name = $(this).find(".input-type").attr("name").replace(/(\d+)/g, index);
                    $(this).find(".input-type").attr("name", name);

                    name = $(this).find(".input-default").attr("name").replace(/(\d+)/g, index);
                    $(this).find(".input-default").attr("name", name);
                });
            });
        });
    </script>
}
